apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: DB_HOST
              value: {{ .Values.env.DB_HOST | quote }}
            - name: DB_PORT
              value: {{ .Values.env.DB_PORT | quote }}
            - name: DB_USER
              value: {{ .Values.env.DB_USER | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.dbPassword.secretName }}
                  key: {{ .Values.secrets.dbPassword.key }}
            - name: DB_NAME
              value: {{ .Values.env.DB_NAME | quote }}
            - name: REDIS_HOST
              value: {{ .Values.env.REDIS_HOST | quote }}
            - name: REDIS_PORT
              value: {{ .Values.env.REDIS_PORT | quote }}
            - name: REDIS_PASSWORD
              value: {{ .Values.env.REDIS_PASSWORD | quote }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.jwtSecret.secretName }}
                  key: {{ .Values.secrets.jwtSecret.key }}
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.apiKey.secretName }}
                  key: {{ .Values.secrets.apiKey.key }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5 